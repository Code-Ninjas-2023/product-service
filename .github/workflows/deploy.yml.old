# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

#name: Product-Service CI/CD workflow
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#
#      - name: Git Checkout
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#          server-id: docker.io
#          server-username: MAVEN_USERNAME
#          server-password: MAVEN_PASSWORD
#
#      - name: Building and Pushing Product-Service
#        run: mvn package dockerfile:push --file ./pom.xml
#        env:
#          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        #    - name: Set up Docker Buildx
        #      uses: docker/setup-buildx-action@v1
        #    - name: Login to DockerHub
        #      uses: docker/login-action@v1
        #      with:
        #          username: ${{ secrets.DOCKER_USERNAME }}
        #          password: ${{ secrets.DOCKER_PASSWORD }}
        #    - name: Build and push
        #      id: docker_build
        #      uses: docker/build-push-action@v2
        #      working-directory:  ${{ github.workspace }}
        #      with:
        #        push: true
        #        tags: ${{ github.repository }}:${{ steps.vars.outputs.tag }}

        #    - name: Build Docker Image
        #      run:
        #        docker build ./ --file ./Dockerfile --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER
        #
        #    - name: Login to Docker Hub
        #      run: |
        #        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u $DOCKER_REPOSITORY --password-stdin
        #
        #    - name: Push Image to Docker Hub
        #      run:
        #        docker push $DOCKER_REPOSITORY/$IMAGE_NAME:$GITHUB_RUN_NUMBER

        #    - name: Publish to Docker Hub
        #      run: |
        #        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io
        #        docker push codeninjas23/product-service${{github.run_number}}

#    - name: Post to a Slack channel
#      id: slack
#      uses: slackapi/slack-github-action@v1.23.0
#      with:
#        # Slack channel id, channel name, or user id to post message.
#        # See also: https://api.slack.com/methods/chat.postMessage#channels
#        # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
#        channel-id: 'product-service-notification'
#        # For posting a simple plain text message
#        slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
#      env:
#        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
